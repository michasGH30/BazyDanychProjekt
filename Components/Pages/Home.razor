@page "/"
@inject NavigationManager navigationManager
@inject ILoginService loginService
@inject IMeetingsService meetingService

<PageTitle>Home</PageTitle>
<h3>Home</h3>

@if (!isLogged)
{
    <p>Loading...</p>
}
else
{
    <!-- all users receive summary of meetings of which they are creators or members -->
    if(meetingSummaries != null)
    {
        foreach(MeetingSummaryResponse response in meetingSummaries)
        {
            <MeetingSummaryComponent meetingSummary="@response" />
        }
    }
    else
    {
        <p>You don't have any meetings :(</p>
    }
}


@code
{
    bool isLogged = false;

    string[] roles;

    List<Meeting>? myMeetingsCreator;
    List<Meeting>? myMeetingsMember;
    List<MeetingSummaryResponse> meetingSummaries;

    protected override async Task OnInitializedAsync()
    {
        isLogged = await loginService.IsLogged();
        if (!isLogged)
        {
            navigationManager.NavigateTo("/login");
        }
        else
        {
            var response = await loginService.GetRoles();
            roles = response.Split(",");

            meetingSummaries = await meetingService.GetMeetingSummaries();

            myMeetingsCreator = await meetingService.GetMyMeetingsCreator();
            myMeetingsMember = await meetingService.GetMyMeetingsMember();

            if(roles.Contains("admin"))
            {
                
            }
        }
    }
   

//     if(myMeetingsCreator == null || myMeetingsMember == null)
//     {
//     <p>Loading your meetings</p>
//     }
//     else
//     {
//     if(myMeetingsCreator != null)
//     {
//         foreach(Meeting meeting in myMeetingsCreator)
//         {
//     <MeetingComponent meeting="meeting" />
//         }
// }
// if (myMeetingsMember != null)
// {
//     foreach (Meeting meeting in myMeetingsMember)
//     {
//     <MeetingComponent meeting="meeting" />
//     }
// }
//     }
}
