@page "/manage"
@inject NavigationManager navigationManager
@inject ILoginService loginService
@inject IProfileService profileService
@inject IDepartmentService departmentsService
@inject ITeamsService teamsService
@inject IUsersService userService
<PageTitle>Manage</PageTitle>
<h3>Manage</h3>

@if (!isLogged)
{
    <p>Loading...</p>
}
else
{
    <!-- all users view -->
    if (profileResponse == null)
    {
        <p>Loading profile...</p>
    }
    else
    {
        <h1>Your profile</h1>
        <p>@profileResponse.FirstName</p>
        <p>@profileResponse.LastName</p>
        <p>@profileResponse.Email</p>
    }
    <!-- admin view -->
    if(roles.Contains("admin"))
    {
        <Tabs>
            <Tab Title="All Departments" IsActive="true">
                <Content>
                    @if (allDepartments != null)
                    {
                        <h1>All Departments</h1>
                        @if (allDepartments.Count > 0)
                        {
                            foreach (var department in allDepartments)
                            {
                                <DepartmentComponent department="department" />
                            }
                        }
                        else
                        {
                            <p>No departments in database.</p>
                        }
                    }
                    else
                    {
                        <p>Some error with all departments.</p>
                    }
                </Content>
            </Tab>
            <Tab Title="All Teams">
                <Content>
                    @if(allTeams != null)
                    {
                        <h1>All Teams</h1>
                        @if (allTeams.Count > 0)
                        {
                            foreach (Team team in allTeams)
                            {
                                <TeamComponent team="team" />
                            }

                        }
                        else
                        {
                            <p>No teams in database.</p>
                        }
                    }
                    else
                    {
                        <p>Some error with all teams.</p>
                    }
                </Content>
            </Tab>
            <Tab Title="All Users">
                <Content>
                    @if(allUsers != null)
                    {
                        <h1>All users</h1>
                        @if (allUsers.Count > 0)
                        {
                            foreach (User user in allUsers)
                            {
                                <UserComponent user="user" typeOfUser="null"/>
                            }

                        }
                        else
                        {
                            <p>No users in database.</p>
                        }
                    }
                    else
                    {
                        <p>Some error with all users.</p>
                    }
                </Content>
            </Tab>
            <Tab Title="Free Users">
                <Content>
                    @if(freeUsers != null)
                    {
                        <h1>Free users</h1>
                        @if (freeUsers.Count > 0)
                        {
                            foreach (User user in freeUsers)
                            {
                                <UserComponent user="user" typeOfUser="Free User"/>
                            }
                        }
                        else
                        {
                            <p>No free users in database.</p>
                        }
                    }
                    else
                    {
                        <p>Some error with free users.</p>
                    }
                </Content>
            </Tab>
        </Tabs>
    }
    <!-- director view -->
    if(directorMyDepartment != null && roles.Contains("director"))
    {
        <h1>My department</h1>
        <DepartmentComponent department="directorMyDepartment"/>
    }
    <!-- leader view -->
    if(leaderMyTeam != null && roles.Contains("leader"))
    {
        <h1>My team</h1>
        <TeamComponent team="leaderMyTeam"/>
    }

}

@code {
    bool isLogged = false;

    ProfileResponse? profileResponse;
    string[] roles;
    List<Team>? allTeams;
    List<DepartmentByIDResponse>? allDepartments;
    List<User>? allUsers;
    List<User>? freeUsers;
    DepartmentByIDResponse directorMyDepartment;
    Team leaderMyTeam;
    // TODO profile change
    protected override async Task OnInitializedAsync()
    {
        isLogged = await loginService.IsLogged();

        if(!isLogged)
        {
            navigationManager.NavigateTo("/login");
        }
        else
        {
            var response = await loginService.GetRoles();
            roles = response.Split(",");

            // all users got their profile informations
            profileResponse = await profileService.GetProfile();

            if (roles.Contains("admin"))
            {
                // all departments, all teams and all users which aren't in any team or department
                allDepartments = await departmentsService.GetAllDepartments();
                allTeams = await teamsService.GetAllTeams();
                allUsers = await userService.GetAllUsers();
                freeUsers = await userService.GetFreeUsers();
            }
            if (roles.Contains("director"))
            {
                // info about department and teams in department
                directorMyDepartment = await departmentsService.GetMyDepartment();
            }
            if (roles.Contains("leader"))
            {
                // info about team and users in team
                leaderMyTeam = await teamsService.GetMyTeam();

            }
        }
    }
}
