@page "/manage"
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@attribute [StreamRendering]
<PageTitle>Home</PageTitle>
<h3>Manage</h3>

@if (loginResponse == null)
{
    <p>Loading...</p>
}
else
{
    if (profileResponse == null)
    {
        <p>Loading profile...</p>
    }
    else
    {
        <p>@profileResponse.FirstName</p>
        <p>@profileResponse.LastName</p>
        <p>@profileResponse.Email</p>
    }

}

@code {
    ProfileResponse? profileResponse;
    LoginResponse? loginResponse;
    string[]? roles;
    // TODO profile change
    // TODO switch in roles
    // 1. Admin: my profile, departments, members of departments, teams, members of teams, users with no team or department
    // 2. director: my profile, department,members of department ,teams, members of teams
    // 3. leader: my profile, team, members of team
    // 4. user: my profile
    protected override async Task OnInitializedAsync()
    {
        loginResponse = await httpClient.GetFromJsonAsync<LoginResponse>("/api/login");

        if (loginResponse != null)
        {
            if (!loginResponse.Success)
            {
                navigationManager.NavigateTo("/login");
            }
            else
            {
                roles = loginResponse.Role.Split(",");

                // all users got their profile informations
                profileResponse = await httpClient.GetFromJsonAsync<ProfileResponse>("/api/profile");

                if (roles.Contains("admin"))
                {
                    // all departments, teams and users which aren't is any of team or department
                }
                if(roles.Contains("director"))
                {
                    // info about department and teams in department
                }
                if(roles.Contains("leader"))
                {
                    // info about team and users in team
                }

            }
        }
    }
}
