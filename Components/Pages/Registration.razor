@page "/registration"
@inject HttpClient httpClient
@inject NavigationManager navigationManager

<PageTitle>Registration</PageTitle>

<h3>Registration</h3>

<EditForm Model="registrationModel" FormName="RegistrationForm" OnValidSubmit="OnValidSubmit">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<div class="mb-2">
		<InputText id="firstName" @bind-Value="registrationModel.FirstName" placeholder="Enter First name" ></InputText>
	</div>
	<div class="mb-2">
		<InputText id="lastName" @bind-Value="registrationModel.LastName" placeholder="Enter Last name"></InputText>
	</div>
	<div class="mb-2">
		<InputText id="email" @bind-Value="registrationModel.Email" placeholder="Enter email" type="email"></InputText>
	</div>
	<div class="mb-2">
		<InputText id="password" @bind-Value="registrationModel.Password" placeholder="Enter password" type="password"></InputText>
	</div>
	<button>SUBMIT</button>
</EditForm>

@code {

	[Inject] protected ToastService ToastService { get; set; }

	RegistrationRequest registrationModel = new RegistrationRequest();

	private async Task OnValidSubmit()
	{

		var response = await httpClient.PostAsJsonAsync("/api/registration", registrationModel);

		var responseObject = await response.Content.ReadFromJsonAsync<RegistrationResponse>();

		if(responseObject != null)
		{
			if (responseObject.Success)
			{
				navigationManager.NavigateTo("/");
			}
			else
			{
				registrationModel.FirstName = "";
				registrationModel.LastName = "";
				registrationModel.Email = "";
				registrationModel.Password = "";
				ToastService.Notify(new(ToastType.Danger, $"Wystąpił błąd z rejestracją, spróbuj ponownie później"));
			}
		}

		
	}
}
