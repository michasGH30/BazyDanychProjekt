@page "/registration"
@inject IRegistrationService registrationService
@inject NavigationManager navigationManager

<PageTitle>Registration</PageTitle>

<div class="container-fluid">
    <div class="row">
        <h1>Registration</h1>
    </div>
    <div class="row">
        <div class="col-3">
            <EditForm Model="registrationModel" FormName="RegistrationForm" OnValidSubmit="OnValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group my-2">
                    <InputText id="firstName" @bind-Value="registrationModel.FirstName" placeholder="Enter First name" class="form-control" autocomplete="off"></InputText>
                </div>
                <div class="form-group my-2">
                    <InputText id="lastName" @bind-Value="registrationModel.LastName" placeholder="Enter Last name" class="form-control" autocomplete="off"></InputText>
                </div>
                <div class="form-group my-2">
                    <InputText id="email" @bind-Value="registrationModel.Email" placeholder="Enter email" type="email" class="form-control" autocomplete="off"></InputText>
                </div>
                <div class="form-group my-2">
                    <InputText id="password" @bind-Value="registrationModel.Password" placeholder="Enter password" type="password" class="form-control" autocomplete="off"></InputText>
                </div>
                <button class="btn btn-primary">SUBMIT</button>
            </EditForm>
        </div>
    </div>
    <Footer />
</div>

@code {

    [Inject] protected ToastService ToastService { get; set; }

    RegistrationRequest registrationModel = new RegistrationRequest();

    private async Task OnValidSubmit()
    {

        int response = await registrationService.Register(registrationModel);

        if (response == 0)
        {
            navigationManager.NavigateTo("/");
        }
        else if (response == 1)
        {
            registrationModel.Email = "";
            ToastService.Notify(new(ToastType.Danger, $"This email is already taken"));
        }
        else
        {
            ToastService.Notify(new(ToastType.Danger, $"There was an error with registration, try again later"));
        }
    }
}
